@layout('layout.admin')

@section('head')

{{ style('css/leaflet.css') }}
{{ style('css/leaflet.pm.css') }}
{{ script('js/leaflet.js') }}
{{ script('js/leaflet.pm.min.js') }}

@endsection

@section('content')
@if(detail.id_item)
  <h2>Edit Item Peta</h2>
  <form class="w3-margin" onsubmit="beforeSaveItem()" method="POST" action="{{ route('PetaController.update', {id: detail.id_item}) }}?_method=PUT">
    {{ csrfField() }}
    <p>
      <label>Nama Item Peta</label>
      <input type="text" class="w3-input w3-border" name="nm_item" />
    </p>
    
    <p>
    <label>Item Peta (Klik ikon sebelah kanan atas pada peta untuk mengedit)</label>
    <div id="peta" style="width:100%; height:300px;"></div>
    </p>
    <p>
    <label>Informasi Item</label>
    <div id="info_item"></div>
    <input type="hidden" name="info_item" />
    </p>
    <p>
    <label>Style Item</label>
    <div id="style_item"></div>
    <input type="hidden" name="style_item" />
    </p>
    <input type="hidden" type="text" name="koordinat" />
    <p>
    <button class="w3-btn w3-blue-grey">Simpan Perubahan</button>
    </p>
  </form>
@else
  <h2>Tambah Item Peta Baru</h2>
  <form class="w3-margin" method="POST" onsubmit="beforeSaveItem()" action="{{ route('PetaController.index') }}">
    {{ csrfField() }}
    <p>
      <label>Nama Item Peta</label>
      <input type="text" class="w3-input w3-border" name="nm_item" />
    </p>
    <p>
    <label>Jenis Item</label>
    <select class="w3-select w3-border" name="tipe_item">
      <option value="Polygon">Polygon</option>
      <option value="Polyline">Line</option>
      <option value="Rectangle">Rectangle</option>
      <option value="Marker">Marker</option>
      <option value="Circle">Circle</option>
    </select>
    </p>
    
    <p>
    <label>Item Peta (Klik ikon sebelah kanan atas pada peta)</label>
    <div id="peta" style="width:100%; height:300px;"></div>
    </p>
    <p>
    <label>Informasi Item</label>
    <div id="info_item"></div>
    <input type="hidden" name="info_item" />
    </p>
    <p>
    <label>Style Item</label>
    <div id="style_item"></div>
    <input type="hidden" name="style_item" />
    </p>
    <input type="hidden" type="text" name="koordinat" />
    <p>
    <button class="w3-btn w3-blue-grey">Simpan</button>
    </p>
  </form>
@endif

<script>

// Variable
var currentItem = "Poly";
var currentItemObject = null;

// Inisialisasi Peta
var map = L.map('peta').setView([-0.502106, 117.153709], 5);
L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiZWdvZGFzYSIsImEiOiJjamd4NWkyMmwwNms2MnhsamJvaWQ3NGZmIn0.6ok1IiPZ0sPNXmiIe-iEWA', {
  attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
                '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
  id: 'mapbox.streets',
  noWrap: false
}).addTo(map);

// Method

function objectToInput(o, input_name, input_value, head1, head2){
  var keys = Object.keys(o);
  var l = keys.length;
  var list = []
  list.push('<table class="w3-table-all">')
  list.push('<tr>')
  list.push('<th class="w3-teal">' + head1 +'</th>')
  list.push('<th class="w3-teal">' + head2 +'</th>')
  list.push('</tr>')
  for(var x = 0; x < l; x++){
    list.push('<tr>')
    list.push('<td><input type="text" name="' + input_name + '" value="' + keys[x] + '" class="w3-input w3-border" /> </td>')
    list.push('<td><input type="text" name="' + input_value + '" value="' + o[keys[x]] + '" class="w3-input w3-border" /> </td>')
    list.push('</tr>')
  }
  list.push('</table>')
  return list.join('')
}

// Parse 2 input yang bersebelahan menjadi object json
// Nama input harus sama
// @param name (DOM input): object untuk input nama
// @param value (DOM input): object untuk input nilai object
function inputToObject(name, value){
  var result = {}
  var lname = name.length
  for(var x = 0; x < lname; x++){
    if(name[x].value != "" && name[x].name != ""){
      result[name[x].value] = value[x].value
    }
  }
  return result;
}

// penggabungan nilai informasi item ke koordinat agar jadi satu geojson
function beforeSaveItem(){
  try{
    var geojson = JSON.parse(document.getElementsByName("koordinat")[0].value)
    geojson.properties.detail = inputToObject(document.getElementsByName("info_keys"), document.getElementsByName("info_value"))
    geojson.properties.style = inputToObject(document.getElementsByName("style_keys"), document.getElementsByName("style_value"))
    document.getElementsByName("koordinat")[0].value = JSON.stringify(geojson)
  }catch(e){
    window.alert(e)
  }
}
function switchItemDrawer(name){
  map.pm.disableDraw(currentItem);
  currentItemName = name;
  map.pm.removeControls();
  var options = {
    position: 'topright', // toolbar position, options are 'topleft', 'topright', 'bottomleft', 'bottomright'
    drawMarker: false, // adds button to draw markers
    drawPolyline: false, // adds button to draw a polyline
    drawRectangle: false, // adds button to draw a rectangle
    drawPolygon: false, // adds button to draw a polygon
    drawCircle: false, // adds button to draw a cricle
    cutPolygon: false, // adds button to cut a hole in a polygon
    editMode: false, // adds button to toggle edit mode for all layers
    removalMode: true, // adds a button to remove layers
};
  switch(name){
    case 'Polygon':
      options.drawPolygon = true
    break;
    case 'Polyline':
      options.drawPolyline = true
    break;
    case 'Rectangle':
      options.drawRectangle = true
    break;
    case 'Circle':
      options.drawCircle = true
    break;
    case 'Marker':
      options.drawMarker = true
    break;
    case 'Edit Mode':
      options.removalMode = false
      options.editMode = true
    break;
  }
  map.pm.addControls(options);
}

function getMapItemValue(itemObject){
  var result = itemObject.toGeoJSON()
  return result.coordinates;
}

map.on('pm:create', function(e) {
  currentItemObject = e.layer;
  currentItemObject.layer_type = currentItemName;
  
  document.getElementsByName("koordinat")[0].value = JSON.stringify(currentItemObject.toGeoJSON())
  
  map.pm.disableDraw(currentItemName);
  switchItemDrawer(null);
});

map.on('pm:remove', function(e) {
  switchItemDrawer(currentItemObject.layer_type);
  currentItemObject = null;
});

@if(!detail.id_item)
  // Event listener
  document.getElementsByName("tipe_item")[0].addEventListener("change", function(){
    if(currentItemObject) map.removeLayer(currentItemObject);
    switchItemDrawer(this.value);
  });
  // Program
  switchItemDrawer('Polygon');
  
  // Membuat form informasi item
  document.getElementById('info_item').innerHTML = objectToInput({nama: "sebuah peta", ukuran: 2}, "info_keys", "info_value", "Nama Informasi", "Nilai Informasi");
  
  // Membuat form style item
  document.getElementById('style_item').innerHTML = objectToInput({color: "#FF0000", fillColor: "#FFF000", fillOpacity: 0.2}, "style_keys", "style_value", "Nama Style", "Informasi Style");

@else
  switchItemDrawer('Edit Mode');
  currentItemObject = L.geoJSON({{ el(toJSON(detail.koordinat)) }}, {
    onEachFeature: function(feature, layer){
      // Mengembalikan value pasca edit ke form
      document.getElementsByName("koordinat")[0].value = JSON.stringify(feature)
      document.getElementsByName("nm_item")[0].value = "{{ detail.nm_item }}"
      
      // Membuat form informasi item
      document.getElementById('info_item').innerHTML = objectToInput(feature.properties.detail, "info_keys", "info_value", "Nama Informasi", "Nilai Informasi");
      
      // Membuat form style item
      document.getElementById('style_item').innerHTML = objectToInput(feature.properties.style, "style_keys", "style_value", "Nama Style", "Informasi Style");
    
    }
  })
  currentItemObject.on('pm:edit', function(layer){
    var geojson = layer.target.toGeoJSON()
    document.getElementsByName("koordinat")[0].value = JSON.stringify(geojson)
  })
  currentItemObject.layer_type = "{{ detail.tipe_item }}"
  currentItemObject.addTo(map);
  
@endif

</script>
@endsection
